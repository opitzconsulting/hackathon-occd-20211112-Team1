# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]



jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Archive 
      uses: actions/upload-artifact@v2
      with:
        name: micronaut-jar
        path: target/hackathon*.jar
                                                       
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'
                                               
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Download jar
      uses: actions/download-artifact@v2
      with:
        name: micronaut-jar
        path: target

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::605607350049:role/github-swiedenfeld-ocpp16-micronaut-cicd-provider-role
        aws-region: eu-central-1
        role-duration-seconds: 900
        role-session-name: swiedenfeld-ocpp16-micronaut-session

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/ocpp16-micronaut:$IMAGE_TAG .
        docker push $ECR_REGISTRY/ocpp16-micronaut:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/ocpp16-micronaut:$IMAGE_TAG"
